// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protofiles/tos.proto

package tospb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Item struct {
	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id    int64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Price float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	// @inject_tag: db:"category_id"
	CategoryID int64 `protobuf:"varint,4,opt,name=categoryID,proto3" json:"categoryID,omitempty" db:"category_id"`
	// @inject_tag: db:"order_item_id"
	OrderItemID          int64     `protobuf:"varint,5,opt,name=orderItemID,proto3" json:"orderItemID,omitempty" db:"order_item_id"`
	Options              []*Option `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{0}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Item) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Item) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Item) GetCategoryID() int64 {
	if m != nil {
		return m.CategoryID
	}
	return 0
}

func (m *Item) GetOrderItemID() int64 {
	if m != nil {
		return m.OrderItemID
	}
	return 0
}

func (m *Item) GetOptions() []*Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type Option struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Price                float32  `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Selected             bool     `protobuf:"varint,4,opt,name=selected,proto3" json:"selected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Option) Reset()         { *m = Option{} }
func (m *Option) String() string { return proto.CompactTextString(m) }
func (*Option) ProtoMessage()    {}
func (*Option) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{1}
}

func (m *Option) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Option.Unmarshal(m, b)
}
func (m *Option) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Option.Marshal(b, m, deterministic)
}
func (m *Option) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Option.Merge(m, src)
}
func (m *Option) XXX_Size() int {
	return xxx_messageInfo_Option.Size(m)
}
func (m *Option) XXX_DiscardUnknown() {
	xxx_messageInfo_Option.DiscardUnknown(m)
}

var xxx_messageInfo_Option proto.InternalMessageInfo

func (m *Option) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Option) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Option) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Option) GetSelected() bool {
	if m != nil {
		return m.Selected
	}
	return false
}

type Category struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Items                []*Item  `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}
func (*Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{2}
}

func (m *Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Category.Unmarshal(m, b)
}
func (m *Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Category.Marshal(b, m, deterministic)
}
func (m *Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Category.Merge(m, src)
}
func (m *Category) XXX_Size() int {
	return xxx_messageInfo_Category.Size(m)
}
func (m *Category) XXX_DiscardUnknown() {
	xxx_messageInfo_Category.DiscardUnknown(m)
}

var xxx_messageInfo_Category proto.InternalMessageInfo

func (m *Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Category) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Category) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type Menu struct {
	Categories           []*Category `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Menu) Reset()         { *m = Menu{} }
func (m *Menu) String() string { return proto.CompactTextString(m) }
func (*Menu) ProtoMessage()    {}
func (*Menu) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{3}
}

func (m *Menu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Menu.Unmarshal(m, b)
}
func (m *Menu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Menu.Marshal(b, m, deterministic)
}
func (m *Menu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Menu.Merge(m, src)
}
func (m *Menu) XXX_Size() int {
	return xxx_messageInfo_Menu.Size(m)
}
func (m *Menu) XXX_DiscardUnknown() {
	xxx_messageInfo_Menu.DiscardUnknown(m)
}

var xxx_messageInfo_Menu proto.InternalMessageInfo

func (m *Menu) GetCategories() []*Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

type Order struct {
	Id     int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Items  []*Item `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Total  float32 `protobuf:"fixed32,4,opt,name=total,proto3" json:"total,omitempty"`
	Status string  `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// @inject_tag: db:"time_ordered"
	TimeOrdered string `protobuf:"bytes,6,opt,name=time_ordered,json=timeOrdered,proto3" json:"time_ordered,omitempty" db:"time_ordered"`
	// @inject_tag: db:"time_complete"
	TimeComplete         string   `protobuf:"bytes,7,opt,name=time_complete,json=timeComplete,proto3" json:"time_complete,omitempty" db:"time_complete"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{4}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Order) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Order) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Order) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Order) GetTimeOrdered() string {
	if m != nil {
		return m.TimeOrdered
	}
	return ""
}

func (m *Order) GetTimeComplete() string {
	if m != nil {
		return m.TimeComplete
	}
	return ""
}

type Response struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{5}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type CreateMenuItemResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMenuItemResponse) Reset()         { *m = CreateMenuItemResponse{} }
func (m *CreateMenuItemResponse) String() string { return proto.CompactTextString(m) }
func (*CreateMenuItemResponse) ProtoMessage()    {}
func (*CreateMenuItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{6}
}

func (m *CreateMenuItemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMenuItemResponse.Unmarshal(m, b)
}
func (m *CreateMenuItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMenuItemResponse.Marshal(b, m, deterministic)
}
func (m *CreateMenuItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMenuItemResponse.Merge(m, src)
}
func (m *CreateMenuItemResponse) XXX_Size() int {
	return xxx_messageInfo_CreateMenuItemResponse.Size(m)
}
func (m *CreateMenuItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMenuItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMenuItemResponse proto.InternalMessageInfo

func (m *CreateMenuItemResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CompleteOrderRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompleteOrderRequest) Reset()         { *m = CompleteOrderRequest{} }
func (m *CompleteOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CompleteOrderRequest) ProtoMessage()    {}
func (*CompleteOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{7}
}

func (m *CompleteOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompleteOrderRequest.Unmarshal(m, b)
}
func (m *CompleteOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompleteOrderRequest.Marshal(b, m, deterministic)
}
func (m *CompleteOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompleteOrderRequest.Merge(m, src)
}
func (m *CompleteOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CompleteOrderRequest.Size(m)
}
func (m *CompleteOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CompleteOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CompleteOrderRequest proto.InternalMessageInfo

func (m *CompleteOrderRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type OrdersRequest struct {
	Request              string   `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrdersRequest) Reset()         { *m = OrdersRequest{} }
func (m *OrdersRequest) String() string { return proto.CompactTextString(m) }
func (*OrdersRequest) ProtoMessage()    {}
func (*OrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{8}
}

func (m *OrdersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersRequest.Unmarshal(m, b)
}
func (m *OrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersRequest.Marshal(b, m, deterministic)
}
func (m *OrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersRequest.Merge(m, src)
}
func (m *OrdersRequest) XXX_Size() int {
	return xxx_messageInfo_OrdersRequest.Size(m)
}
func (m *OrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersRequest proto.InternalMessageInfo

func (m *OrdersRequest) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

type OrdersResponse struct {
	Orders               []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrdersResponse) Reset()         { *m = OrdersResponse{} }
func (m *OrdersResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersResponse) ProtoMessage()    {}
func (*OrdersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{9}
}

func (m *OrdersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersResponse.Unmarshal(m, b)
}
func (m *OrdersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersResponse.Marshal(b, m, deterministic)
}
func (m *OrdersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersResponse.Merge(m, src)
}
func (m *OrdersResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersResponse.Size(m)
}
func (m *OrdersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersResponse proto.InternalMessageInfo

func (m *OrdersResponse) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{10}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type DeleteMenuItemRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMenuItemRequest) Reset()         { *m = DeleteMenuItemRequest{} }
func (m *DeleteMenuItemRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMenuItemRequest) ProtoMessage()    {}
func (*DeleteMenuItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79767780450b268d, []int{11}
}

func (m *DeleteMenuItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMenuItemRequest.Unmarshal(m, b)
}
func (m *DeleteMenuItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMenuItemRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMenuItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMenuItemRequest.Merge(m, src)
}
func (m *DeleteMenuItemRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMenuItemRequest.Size(m)
}
func (m *DeleteMenuItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMenuItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMenuItemRequest proto.InternalMessageInfo

func (m *DeleteMenuItemRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Item)(nil), "tospb.Item")
	proto.RegisterType((*Option)(nil), "tospb.Option")
	proto.RegisterType((*Category)(nil), "tospb.Category")
	proto.RegisterType((*Menu)(nil), "tospb.Menu")
	proto.RegisterType((*Order)(nil), "tospb.Order")
	proto.RegisterType((*Response)(nil), "tospb.Response")
	proto.RegisterType((*CreateMenuItemResponse)(nil), "tospb.CreateMenuItemResponse")
	proto.RegisterType((*CompleteOrderRequest)(nil), "tospb.CompleteOrderRequest")
	proto.RegisterType((*OrdersRequest)(nil), "tospb.OrdersRequest")
	proto.RegisterType((*OrdersResponse)(nil), "tospb.OrdersResponse")
	proto.RegisterType((*Empty)(nil), "tospb.Empty")
	proto.RegisterType((*DeleteMenuItemRequest)(nil), "tospb.DeleteMenuItemRequest")
}

func init() { proto.RegisterFile("protofiles/tos.proto", fileDescriptor_79767780450b268d) }

var fileDescriptor_79767780450b268d = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0xad, 0x9d, 0xd8, 0x49, 0xc7, 0x49, 0x3e, 0x7d, 0xab, 0xb4, 0xb2, 0xca, 0x8f, 0xd2, 0x05,
	0xa5, 0xe1, 0x26, 0xad, 0x52, 0xf1, 0x73, 0x05, 0xaa, 0x12, 0x84, 0x72, 0x81, 0x22, 0x1c, 0xb8,
	0x05, 0x25, 0xf6, 0x80, 0x2c, 0xc5, 0x59, 0xe3, 0xdd, 0x54, 0xea, 0xfb, 0x70, 0xc7, 0x6b, 0xf0,
	0x36, 0xbc, 0x04, 0xf2, 0x78, 0x37, 0xd8, 0xc5, 0x08, 0x24, 0xee, 0x3c, 0x33, 0x67, 0x7c, 0xce,
	0x9c, 0x19, 0x1b, 0xfa, 0x69, 0x26, 0x94, 0xf8, 0x18, 0x6f, 0x50, 0x9e, 0x2b, 0x21, 0xc7, 0x14,
	0x32, 0x47, 0x09, 0x99, 0xae, 0xf9, 0x57, 0x0b, 0x9a, 0x73, 0x85, 0x09, 0x63, 0xd0, 0xdc, 0xae,
	0x12, 0xf4, 0xad, 0x81, 0x35, 0x3a, 0x0c, 0xe8, 0x99, 0xf5, 0xc0, 0x8e, 0x23, 0xdf, 0x1e, 0x58,
	0xa3, 0x46, 0x60, 0xc7, 0x11, 0xeb, 0x83, 0x93, 0x66, 0x71, 0x88, 0x7e, 0x63, 0x60, 0x8d, 0xec,
	0xa0, 0x08, 0xd8, 0x7d, 0x80, 0x70, 0xa5, 0xf0, 0x93, 0xc8, 0x6e, 0xe6, 0x33, 0xbf, 0x49, 0xe8,
	0x52, 0x86, 0x0d, 0xc0, 0x13, 0x59, 0x84, 0x59, 0x4e, 0x33, 0x9f, 0xf9, 0x0e, 0x01, 0xca, 0x29,
	0x76, 0x06, 0x2d, 0x91, 0xaa, 0x58, 0x6c, 0xa5, 0xef, 0x0e, 0x1a, 0x23, 0x6f, 0xd2, 0x1d, 0x93,
	0xba, 0xf1, 0x82, 0xb2, 0x81, 0xa9, 0xf2, 0xf7, 0xe0, 0x16, 0xa9, 0x7f, 0x90, 0x7b, 0x02, 0x6d,
	0x89, 0x1b, 0x0c, 0x15, 0x46, 0x24, 0xb6, 0x1d, 0xec, 0x63, 0xfe, 0x06, 0xda, 0x53, 0x2d, 0xfc,
	0xaf, 0x18, 0x4e, 0xc1, 0x89, 0x15, 0x26, 0xd2, 0x6f, 0x90, 0x6c, 0x4f, 0xcb, 0xce, 0xc7, 0x0a,
	0x8a, 0x0a, 0x7f, 0x0a, 0xcd, 0xd7, 0xb8, 0xdd, 0xb1, 0xf3, 0xbd, 0x4b, 0x31, 0x4a, 0xdf, 0x22,
	0xfc, 0x7f, 0x1a, 0x6f, 0x38, 0x83, 0x12, 0x84, 0x7f, 0xb3, 0xc0, 0x59, 0xe4, 0x26, 0x69, 0x56,
	0x6b, 0xcf, 0x6a, 0x94, 0xd9, 0x25, 0x65, 0x7f, 0x56, 0x92, 0xdb, 0xa1, 0x84, 0x5a, 0x6d, 0x68,
	0x6a, 0x3b, 0x28, 0x02, 0x76, 0x0c, 0xae, 0x54, 0x2b, 0xb5, 0x93, 0xb4, 0x98, 0xc3, 0x40, 0x47,
	0xec, 0x14, 0x3a, 0x2a, 0x4e, 0xf0, 0x03, 0xed, 0x09, 0x23, 0xdf, 0xa5, 0xaa, 0x97, 0xe7, 0x16,
	0x45, 0x8a, 0x3d, 0x80, 0x2e, 0x41, 0x42, 0x91, 0xa4, 0x1b, 0x54, 0xe8, 0xb7, 0x08, 0x43, 0x7d,
	0x53, 0x9d, 0xe3, 0x43, 0x68, 0x07, 0x28, 0x53, 0xb1, 0x95, 0x64, 0x7d, 0xa6, 0x9f, 0xb5, 0xad,
	0xfb, 0x98, 0x8f, 0xe0, 0x78, 0x9a, 0xe1, 0x4a, 0x61, 0xee, 0x16, 0xc9, 0x36, 0x5d, 0xb7, 0xc6,
	0xe7, 0x43, 0xe8, 0x9b, 0xb7, 0x93, 0x92, 0x00, 0x3f, 0xef, 0x50, 0xaa, 0x5f, 0x70, 0x8f, 0xa0,
	0x4b, 0x75, 0x69, 0x00, 0x3e, 0xb4, 0xb2, 0xe2, 0x51, 0xb3, 0x9b, 0x90, 0x3f, 0x81, 0x9e, 0x81,
	0x6a, 0xd2, 0x87, 0xe0, 0xd2, 0xe4, 0x66, 0x55, 0x1d, 0x73, 0x91, 0xc4, 0xa8, 0x6b, 0xbc, 0x05,
	0xce, 0xcb, 0x24, 0x55, 0x37, 0xfc, 0x0c, 0x8e, 0x66, 0x98, 0x2b, 0xfa, 0xa9, 0xbe, 0x56, 0xd4,
	0xe4, 0x8b, 0x0d, 0x5e, 0x8e, 0x59, 0x62, 0x76, 0x9d, 0x5f, 0xe3, 0x10, 0x5a, 0xaf, 0x50, 0xd1,
	0x85, 0x18, 0x0a, 0x7a, 0xe3, 0x89, 0xd9, 0x60, 0x5e, 0xe2, 0x07, 0xec, 0x39, 0xf4, 0xaa, 0xf6,
	0xb0, 0xf2, 0x8a, 0x4f, 0xee, 0x99, 0x4b, 0xaa, 0xb5, 0x90, 0x1f, 0xb0, 0x0b, 0xe8, 0xbd, 0x4b,
	0xa3, 0xdf, 0xf6, 0x9b, 0x4b, 0x2c, 0x75, 0x5c, 0x41, 0xaf, 0x3a, 0x12, 0xbb, 0xab, 0x41, 0xb5,
	0x93, 0xd6, 0xbd, 0xe2, 0x19, 0xf4, 0xab, 0x82, 0xf4, 0xc7, 0x5b, 0xfd, 0xbc, 0x6b, 0x3a, 0x27,
	0xdf, 0x2d, 0xe8, 0x90, 0xd5, 0xc6, 0xa7, 0x31, 0x78, 0xcb, 0xdd, 0x3a, 0x89, 0x55, 0xf1, 0x49,
	0x54, 0xd6, 0x51, 0x47, 0xfd, 0x18, 0x3a, 0x57, 0xa1, 0x8a, 0xaf, 0x8b, 0x13, 0x91, 0xb7, 0xcc,
	0x3d, 0x2a, 0xb7, 0xcb, 0x52, 0xdb, 0x0b, 0xe8, 0x56, 0x6e, 0x8b, 0xdd, 0x31, 0xc6, 0xd6, 0x5c,
	0x5c, 0x1d, 0xef, 0x25, 0xfc, 0xbf, 0xdc, 0xad, 0x65, 0x98, 0xc5, 0x6b, 0x7c, 0x2b, 0x6a, 0xc9,
	0x2b, 0xda, 0xf9, 0xc1, 0x85, 0xb5, 0x76, 0xe9, 0x97, 0x7c, 0xf9, 0x23, 0x00, 0x00, 0xff, 0xff,
	0x96, 0xe3, 0x46, 0x78, 0xaa, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MenuServiceClient is the client API for MenuService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MenuServiceClient interface {
	GetMenu(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Menu, error)
	CreateMenuItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*CreateMenuItemResponse, error)
	UpdateMenuItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Response, error)
	DeleteMenuItem(ctx context.Context, in *DeleteMenuItemRequest, opts ...grpc.CallOption) (*Response, error)
	CreateMenuItemOption(ctx context.Context, in *Option, opts ...grpc.CallOption) (*Response, error)
}

type menuServiceClient struct {
	cc *grpc.ClientConn
}

func NewMenuServiceClient(cc *grpc.ClientConn) MenuServiceClient {
	return &menuServiceClient{cc}
}

func (c *menuServiceClient) GetMenu(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Menu, error) {
	out := new(Menu)
	err := c.cc.Invoke(ctx, "/tospb.MenuService/GetMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuServiceClient) CreateMenuItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*CreateMenuItemResponse, error) {
	out := new(CreateMenuItemResponse)
	err := c.cc.Invoke(ctx, "/tospb.MenuService/CreateMenuItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuServiceClient) UpdateMenuItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/tospb.MenuService/UpdateMenuItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuServiceClient) DeleteMenuItem(ctx context.Context, in *DeleteMenuItemRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/tospb.MenuService/DeleteMenuItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuServiceClient) CreateMenuItemOption(ctx context.Context, in *Option, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/tospb.MenuService/CreateMenuItemOption", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MenuServiceServer is the server API for MenuService service.
type MenuServiceServer interface {
	GetMenu(context.Context, *Empty) (*Menu, error)
	CreateMenuItem(context.Context, *Item) (*CreateMenuItemResponse, error)
	UpdateMenuItem(context.Context, *Item) (*Response, error)
	DeleteMenuItem(context.Context, *DeleteMenuItemRequest) (*Response, error)
	CreateMenuItemOption(context.Context, *Option) (*Response, error)
}

// UnimplementedMenuServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMenuServiceServer struct {
}

func (*UnimplementedMenuServiceServer) GetMenu(ctx context.Context, req *Empty) (*Menu, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMenu not implemented")
}
func (*UnimplementedMenuServiceServer) CreateMenuItem(ctx context.Context, req *Item) (*CreateMenuItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMenuItem not implemented")
}
func (*UnimplementedMenuServiceServer) UpdateMenuItem(ctx context.Context, req *Item) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMenuItem not implemented")
}
func (*UnimplementedMenuServiceServer) DeleteMenuItem(ctx context.Context, req *DeleteMenuItemRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMenuItem not implemented")
}
func (*UnimplementedMenuServiceServer) CreateMenuItemOption(ctx context.Context, req *Option) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMenuItemOption not implemented")
}

func RegisterMenuServiceServer(s *grpc.Server, srv MenuServiceServer) {
	s.RegisterService(&_MenuService_serviceDesc, srv)
}

func _MenuService_GetMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServiceServer).GetMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tospb.MenuService/GetMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServiceServer).GetMenu(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MenuService_CreateMenuItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Item)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServiceServer).CreateMenuItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tospb.MenuService/CreateMenuItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServiceServer).CreateMenuItem(ctx, req.(*Item))
	}
	return interceptor(ctx, in, info, handler)
}

func _MenuService_UpdateMenuItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Item)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServiceServer).UpdateMenuItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tospb.MenuService/UpdateMenuItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServiceServer).UpdateMenuItem(ctx, req.(*Item))
	}
	return interceptor(ctx, in, info, handler)
}

func _MenuService_DeleteMenuItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMenuItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServiceServer).DeleteMenuItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tospb.MenuService/DeleteMenuItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServiceServer).DeleteMenuItem(ctx, req.(*DeleteMenuItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MenuService_CreateMenuItemOption_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Option)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServiceServer).CreateMenuItemOption(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tospb.MenuService/CreateMenuItemOption",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServiceServer).CreateMenuItemOption(ctx, req.(*Option))
	}
	return interceptor(ctx, in, info, handler)
}

var _MenuService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tospb.MenuService",
	HandlerType: (*MenuServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMenu",
			Handler:    _MenuService_GetMenu_Handler,
		},
		{
			MethodName: "CreateMenuItem",
			Handler:    _MenuService_CreateMenuItem_Handler,
		},
		{
			MethodName: "UpdateMenuItem",
			Handler:    _MenuService_UpdateMenuItem_Handler,
		},
		{
			MethodName: "DeleteMenuItem",
			Handler:    _MenuService_DeleteMenuItem_Handler,
		},
		{
			MethodName: "CreateMenuItemOption",
			Handler:    _MenuService_CreateMenuItemOption_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protofiles/tos.proto",
}

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	// Unary
	SubmitOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*Response, error)
	ActiveOrders(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*OrdersResponse, error)
	CompleteOrder(ctx context.Context, in *CompleteOrderRequest, opts ...grpc.CallOption) (*Response, error)
	// server streaming
	SubscribeToOrders(ctx context.Context, in *Empty, opts ...grpc.CallOption) (OrderService_SubscribeToOrdersClient, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) SubmitOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/tospb.OrderService/SubmitOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) ActiveOrders(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*OrdersResponse, error) {
	out := new(OrdersResponse)
	err := c.cc.Invoke(ctx, "/tospb.OrderService/ActiveOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) CompleteOrder(ctx context.Context, in *CompleteOrderRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/tospb.OrderService/CompleteOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) SubscribeToOrders(ctx context.Context, in *Empty, opts ...grpc.CallOption) (OrderService_SubscribeToOrdersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OrderService_serviceDesc.Streams[0], "/tospb.OrderService/SubscribeToOrders", opts...)
	if err != nil {
		return nil, err
	}
	x := &orderServiceSubscribeToOrdersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OrderService_SubscribeToOrdersClient interface {
	Recv() (*Order, error)
	grpc.ClientStream
}

type orderServiceSubscribeToOrdersClient struct {
	grpc.ClientStream
}

func (x *orderServiceSubscribeToOrdersClient) Recv() (*Order, error) {
	m := new(Order)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	// Unary
	SubmitOrder(context.Context, *Order) (*Response, error)
	ActiveOrders(context.Context, *Empty) (*OrdersResponse, error)
	CompleteOrder(context.Context, *CompleteOrderRequest) (*Response, error)
	// server streaming
	SubscribeToOrders(*Empty, OrderService_SubscribeToOrdersServer) error
}

// UnimplementedOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (*UnimplementedOrderServiceServer) SubmitOrder(ctx context.Context, req *Order) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitOrder not implemented")
}
func (*UnimplementedOrderServiceServer) ActiveOrders(ctx context.Context, req *Empty) (*OrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActiveOrders not implemented")
}
func (*UnimplementedOrderServiceServer) CompleteOrder(ctx context.Context, req *CompleteOrderRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteOrder not implemented")
}
func (*UnimplementedOrderServiceServer) SubscribeToOrders(req *Empty, srv OrderService_SubscribeToOrdersServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeToOrders not implemented")
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_SubmitOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).SubmitOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tospb.OrderService/SubmitOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).SubmitOrder(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_ActiveOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).ActiveOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tospb.OrderService/ActiveOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).ActiveOrders(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_CompleteOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompleteOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CompleteOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tospb.OrderService/CompleteOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CompleteOrder(ctx, req.(*CompleteOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_SubscribeToOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OrderServiceServer).SubscribeToOrders(m, &orderServiceSubscribeToOrdersServer{stream})
}

type OrderService_SubscribeToOrdersServer interface {
	Send(*Order) error
	grpc.ServerStream
}

type orderServiceSubscribeToOrdersServer struct {
	grpc.ServerStream
}

func (x *orderServiceSubscribeToOrdersServer) Send(m *Order) error {
	return x.ServerStream.SendMsg(m)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tospb.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitOrder",
			Handler:    _OrderService_SubmitOrder_Handler,
		},
		{
			MethodName: "ActiveOrders",
			Handler:    _OrderService_ActiveOrders_Handler,
		},
		{
			MethodName: "CompleteOrder",
			Handler:    _OrderService_CompleteOrder_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeToOrders",
			Handler:       _OrderService_SubscribeToOrders_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protofiles/tos.proto",
}
